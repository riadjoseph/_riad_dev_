import { h } from 'preact';
import { renderChildrenAsTextOrHtml } from '../surveys-extension-utils';
import { BottomSection } from './BottomSection';
import { Cancel } from './QuestionHeader';
import { useContext } from 'preact/hooks';
import { SurveyContext } from '../surveys-extension-utils';
export function ConfirmationMessage(_a) {
    var header = _a.header, description = _a.description, contentType = _a.contentType, forceDisableHtml = _a.forceDisableHtml, appearance = _a.appearance, onClose = _a.onClose;
    var isPopup = useContext(SurveyContext).isPopup;
    return (<div className="thank-you-message">
            {isPopup && <Cancel onClick={function () { return onClose(); }}/>}
            <div className="thank-you-message-container">
                <h3 className="thank-you-message-header">{header}</h3>
                {description &&
            renderChildrenAsTextOrHtml({
                component: h('div', { className: 'thank-you-message-body' }),
                children: description,
                renderAsHtml: !forceDisableHtml && contentType !== 'text',
            })}
                {isPopup && (<BottomSection text={appearance.thankYouMessageCloseButtonText || 'Close'} submitDisabled={false} appearance={appearance} onSubmit={function () { return onClose(); }}/>)}
            </div>
        </div>);
}
//# sourceMappingURL=ConfirmationMessage.jsx.map