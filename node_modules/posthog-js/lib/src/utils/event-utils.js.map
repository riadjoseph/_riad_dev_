{"version":3,"file":"event-utils.js","sourceRoot":"","sources":["../../../src/utils/event-utils.ts"],"names":[],"mappings":"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","sourcesContent":["import { convertToURL, getQueryParam, maskQueryParams } from './request-utils'\nimport { isNull } from './type-utils'\nimport { Properties } from '../types'\nimport Config from '../config'\nimport { each, extend, extendArray, stripEmptyProperties } from './index'\nimport { document, location, userAgent, window } from './globals'\nimport { detectBrowser, detectBrowserVersion, detectDevice, detectDeviceType, detectOS } from './user-agent-utils'\nimport { stripLeadingDollar } from './string-utils'\n\nconst URL_REGEX_PREFIX = 'https?://(.*)'\n\n// CAMPAIGN_PARAMS and EVENT_TO_PERSON_PROPERTIES should be kept in sync with\n// https://github.com/PostHog/posthog/blob/master/plugin-server/src/utils/db/utils.ts#L60\n\n// The list of campaign parameters that could be considered personal data under e.g. GDPR.\n// These can be masked in URLs and properties before being sent to posthog.\nexport const PERSONAL_DATA_CAMPAIGN_PARAMS = [\n    'gclid', // google ads\n    'gclsrc', // google ads 360\n    'dclid', // google display ads\n    'gbraid', // google ads, web to app\n    'wbraid', // google ads, app to web\n    'fbclid', // facebook\n    'msclkid', // microsoft\n    'twclid', // twitter\n    'li_fat_id', // linkedin\n    'igshid', // instagram\n    'ttclid', // tiktok\n    'rdt_cid', // reddit\n    'epik', // pinterest\n    'qclid', // quora\n    'sccid', // snapchat\n    'irclid', // impact\n    '_kx', // klaviyo\n]\n\nexport const CAMPAIGN_PARAMS = extendArray(\n    [\n        'utm_source',\n        'utm_medium',\n        'utm_campaign',\n        'utm_content',\n        'utm_term',\n        'gad_source', // google ads source\n        'mc_cid', // mailchimp campaign id\n    ],\n    PERSONAL_DATA_CAMPAIGN_PARAMS\n)\n\nexport const EVENT_TO_PERSON_PROPERTIES = [\n    // mobile params\n    '$app_build',\n    '$app_name',\n    '$app_namespace',\n    '$app_version',\n    // web params\n    '$browser',\n    '$browser_version',\n    '$device_type',\n    '$current_url',\n    '$pathname',\n    '$os',\n    '$os_name', // $os_name is a special case, it's treated as an alias of $os!\n    '$os_version',\n    '$referring_domain',\n    '$referrer',\n    '$screen_height',\n    '$screen_width',\n    '$viewport_height',\n    '$viewport_width',\n    '$raw_user_agent',\n]\n\nexport const MASKED = '<masked>'\n\nexport function getCampaignParams(\n    customTrackedParams?: string[],\n    maskPersonalDataProperties?: boolean,\n    customPersonalDataProperties?: string[] | undefined\n): Record<string, string> {\n    if (!document) {\n        return {}\n    }\n\n    const paramsToMask = maskPersonalDataProperties\n        ? extendArray([], PERSONAL_DATA_CAMPAIGN_PARAMS, customPersonalDataProperties || [])\n        : []\n\n    return _getCampaignParamsFromUrl(maskQueryParams(document.URL, paramsToMask, MASKED), customTrackedParams)\n}\n\nfunction _getCampaignParamsFromUrl(url: string, customParams?: string[]): Record<string, string> {\n    const campaign_keywords = CAMPAIGN_PARAMS.concat(customParams || [])\n\n    const params: Record<string, any> = {}\n    each(campaign_keywords, function (kwkey) {\n        const kw = getQueryParam(url, kwkey)\n        params[kwkey] = kw ? kw : null\n    })\n\n    return params\n}\n\nfunction _getSearchEngine(referrer: string): string | null {\n    if (!referrer) {\n        return null\n    } else {\n        if (referrer.search(URL_REGEX_PREFIX + 'google.([^/?]*)') === 0) {\n            return 'google'\n        } else if (referrer.search(URL_REGEX_PREFIX + 'bing.com') === 0) {\n            return 'bing'\n        } else if (referrer.search(URL_REGEX_PREFIX + 'yahoo.com') === 0) {\n            return 'yahoo'\n        } else if (referrer.search(URL_REGEX_PREFIX + 'duckduckgo.com') === 0) {\n            return 'duckduckgo'\n        } else {\n            return null\n        }\n    }\n}\n\nfunction _getSearchInfoFromReferrer(referrer: string): Record<string, any> {\n    const search = _getSearchEngine(referrer)\n    const param = search != 'yahoo' ? 'q' : 'p'\n    const ret: Record<string, any> = {}\n\n    if (!isNull(search)) {\n        ret['$search_engine'] = search\n\n        const keyword = document ? getQueryParam(document.referrer, param) : ''\n        if (keyword.length) {\n            ret['ph_keyword'] = keyword\n        }\n    }\n\n    return ret\n}\n\nexport function getSearchInfo(): Record<string, any> {\n    const referrer = document?.referrer\n    if (!referrer) {\n        return {}\n    }\n    return _getSearchInfoFromReferrer(referrer)\n}\n\nexport function getBrowserLanguage(): string | undefined {\n    return (\n        navigator.language || // Any modern browser\n        (navigator as Record<string, any>).userLanguage // IE11\n    )\n}\n\nexport function getBrowserLanguagePrefix(): string | undefined {\n    const lang = getBrowserLanguage()\n    return typeof lang === 'string' ? lang.split('-')[0] : undefined\n}\n\nexport function getReferrer(): string {\n    return document?.referrer || '$direct'\n}\n\nexport function getReferringDomain(): string {\n    if (!document?.referrer) {\n        return '$direct'\n    }\n    return convertToURL(document.referrer)?.host || '$direct'\n}\n\nexport function getReferrerInfo(): Record<string, any> {\n    return {\n        $referrer: getReferrer(),\n        $referring_domain: getReferringDomain(),\n    }\n}\n\nexport function getPersonInfo(maskPersonalDataProperties?: boolean, customPersonalDataProperties?: string[]) {\n    const paramsToMask = maskPersonalDataProperties\n        ? extendArray([], PERSONAL_DATA_CAMPAIGN_PARAMS, customPersonalDataProperties || [])\n        : []\n    const url = location?.href.substring(0, 1000)\n    // we're being a bit more economical with bytes here because this is stored in the cookie\n    return {\n        r: getReferrer().substring(0, 1000),\n        u: url ? maskQueryParams(url, paramsToMask, MASKED) : undefined,\n    }\n}\n\nexport function getPersonPropsFromInfo(info: Record<string, any>): Record<string, any> {\n    const { r: referrer, u: url } = info\n    const referring_domain =\n        referrer == null ? undefined : referrer == '$direct' ? '$direct' : convertToURL(referrer)?.host\n\n    const props: Record<string, string | undefined> = {\n        $referrer: referrer,\n        $referring_domain: referring_domain,\n    }\n    if (url) {\n        props['$current_url'] = url\n        const location = convertToURL(url)\n        props['$host'] = location?.host\n        props['$pathname'] = location?.pathname\n        const campaignParams = _getCampaignParamsFromUrl(url)\n        extend(props, campaignParams)\n    }\n    if (referrer) {\n        const searchInfo = _getSearchInfoFromReferrer(referrer)\n        extend(props, searchInfo)\n    }\n    return props\n}\n\nexport function getInitialPersonPropsFromInfo(info: Record<string, any>): Record<string, any> {\n    const personProps = getPersonPropsFromInfo(info)\n    const props: Record<string, any> = {}\n    each(personProps, function (val: any, key: string) {\n        props[`$initial_${stripLeadingDollar(key)}`] = val\n    })\n    return props\n}\n\nexport function getTimezone(): string | undefined {\n    try {\n        return Intl.DateTimeFormat().resolvedOptions().timeZone\n    } catch {\n        return undefined\n    }\n}\n\nexport function getTimezoneOffset(): number | undefined {\n    try {\n        return new Date().getTimezoneOffset()\n    } catch {\n        return undefined\n    }\n}\n\nexport function getEventProperties(\n    maskPersonalDataProperties?: boolean,\n    customPersonalDataProperties?: string[]\n): Properties {\n    if (!userAgent) {\n        return {}\n    }\n    const paramsToMask = maskPersonalDataProperties\n        ? extendArray([], PERSONAL_DATA_CAMPAIGN_PARAMS, customPersonalDataProperties || [])\n        : []\n    const [os_name, os_version] = detectOS(userAgent)\n    return extend(\n        stripEmptyProperties({\n            $os: os_name,\n            $os_version: os_version,\n            $browser: detectBrowser(userAgent, navigator.vendor),\n            $device: detectDevice(userAgent),\n            $device_type: detectDeviceType(userAgent),\n            $timezone: getTimezone(),\n            $timezone_offset: getTimezoneOffset(),\n        }),\n        {\n            $current_url: maskQueryParams(location?.href, paramsToMask, MASKED),\n            $host: location?.host,\n            $pathname: location?.pathname,\n            $raw_user_agent: userAgent.length > 1000 ? userAgent.substring(0, 997) + '...' : userAgent,\n            $browser_version: detectBrowserVersion(userAgent, navigator.vendor),\n            $browser_language: getBrowserLanguage(),\n            $browser_language_prefix: getBrowserLanguagePrefix(),\n            $screen_height: window?.screen.height,\n            $screen_width: window?.screen.width,\n            $viewport_height: window?.innerHeight,\n            $viewport_width: window?.innerWidth,\n            $lib: 'web',\n            $lib_version: Config.LIB_VERSION,\n            $insert_id: Math.random().toString(36).substring(2, 10) + Math.random().toString(36).substring(2, 10),\n            $time: Date.now() / 1000, // epoch time in seconds\n        }\n    )\n}\n"]}