import { createLogger } from '../utils/logger';
export var SURVEY_LOGGER = createLogger('[Surveys]');
export function isSurveyRunning(survey) {
    return !!(survey.start_date && !survey.end_date);
}
export function doesSurveyActivateByEvent(survey) {
    var _a, _b, _c;
    return !!((_c = (_b = (_a = survey.conditions) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.values) === null || _c === void 0 ? void 0 : _c.length);
}
export function doesSurveyActivateByAction(survey) {
    var _a, _b, _c;
    return !!((_c = (_b = (_a = survey.conditions) === null || _a === void 0 ? void 0 : _a.actions) === null || _b === void 0 ? void 0 : _b.values) === null || _c === void 0 ? void 0 : _c.length);
}
export var SURVEY_SEEN_PREFIX = 'seenSurvey_';
export var SURVEY_IN_PROGRESS_PREFIX = 'inProgressSurvey_';
export var getSurveyInteractionProperty = function (survey, action) {
    var surveyProperty = "$survey_".concat(action, "/").concat(survey.id);
    if (survey.current_iteration && survey.current_iteration > 0) {
        surveyProperty = "$survey_".concat(action, "/").concat(survey.id, "/").concat(survey.current_iteration);
    }
    return surveyProperty;
};
export var getSurveySeenKey = function (survey) {
    var surveySeenKey = "".concat(SURVEY_SEEN_PREFIX).concat(survey.id);
    if (survey.current_iteration && survey.current_iteration > 0) {
        surveySeenKey = "".concat(SURVEY_SEEN_PREFIX).concat(survey.id, "_").concat(survey.current_iteration);
    }
    return surveySeenKey;
};
//# sourceMappingURL=survey-utils.js.map